name: Deploy with rsync

on: workflow_dispatch

permissions: write-all

env:
  APP_ENV: prod
  APP_VERSION: ${{ github.ref_name }}

jobs:
  rsync_upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP Action
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Setup env
        run: |
          echo "APP_ENV=prod" >> .env.local
          echo "APP_DEBUG=0" >> .env.local
          touch .env.prod.local
          echo "${{ secrets.DATABSE_URL }}" >> .env.prod.local
          
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: locked
          composer-options: " -q --no-ansi --no-interaction --no-progress --prefer-dist --ignore-platform-reqs --optimize-autoloader --no-dev"

      - name: Import assets
        run: |
          php bin/console sass:build
          php bin/console asset-map:compile
          php bin/console assets:install

      - name: Optimize app
        run: |
          composer dump-env prod
          composer dump-autoload --optimize --classmap-authoritative
          php bin/console cache:warmup

          # Copy .htaccess
          cp docker/apache/.htaccess public/.htaccess

          # Optimize PHP
          cp docker/apache/php_prod.ini public/php.ini
          echo "opcache.preload=${{ secrets.APP_PATH }}/config/preload.php" >> public/php.ini

          # Register custom public/php.ini in public/.htaccess
          echo "suPHP_ConfigPath ${{ secrets.APP_PATH }}/public/" >> public/.htaccess

      # Get the public IP of the runner
      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - uses: tecolicom/actions-use-apt-tools@v1
        with:
          tools: oathtool gnupg2
          method: timestamp

      # Whitelist the public IP of the runner on the remote server by adding it 
      # to the SSH whitelist and wait 65 seconds for the IP to be whitelisted
      - name: Whitelist IP on hosting & delete github old ones (o2switch)
        shell: bash
        run: |
          ENDPOINT='frontend/o2switch/o2switch-ssh-whitelist/index.live.php'
          OTP=$(oathtool -b --totp '${{ secrets.O2SWITCH_OTP_SECRET }}')
          AUTH_STR="Basic $(echo -n '${{ secrets.O2SWITCH_USER }}:${{ secrets.O2SWITCH_PASSWORD }}' | base64)"

          echo "Get actual whitelisted IPs..."
          UNIQUE_IPS=$(curl -H "Authorization: $AUTH_STR" -H "X-CPANEL-OTP: $OTP" -sX GET "https://${{ secrets.O2SWITCH_HOST }}:2083/$ENDPOINT?r=list" | jq -r '.data.list[] | .address' | sort -u)
          for address in $UNIQUE_IPS; do
            # if [[ $address == "$#{{ secrets.IP_TO_KEEP }}" ]]; then
            #     echo "Keep this IP, go to the next..."
            #     continue
            # fi
            echo "Delete this github IP: $address (in & out)"
            curl -H "Authorization: $AUTH_STR" -H "X-CPANEL-OTP: $OTP" -sX GET "https://${{ secrets.O2SWITCH_HOST }}:2083/$ENDPOINT?r=remove&address=$address&direction=in&port=22" | jq
            sleep 3
            curl -H "Authorization: $AUTH_STR" -H "X-CPANEL-OTP: $OTP" -sX GET "https://${{ secrets.O2SWITCH_HOST }}:2083/$ENDPOINT?r=remove&address=$address&direction=out&port=22" | jq
            sleep 3
          done
          echo "All non-whitelisted IPs deleted!"

          echo "Attempt to whitelist IP..."
          curl -H "Authorization: $AUTH_STR" -H "X-CPANEL-OTP: $OTP" -sX POST -d 'whitelist[address]=${{ steps.ip.outputs.ipv4 }}' -d 'whitelist[port]=22' "https://${{ secrets.O2SWITCH_HOST }}:2083/$ENDPOINT?r=add" | jq

      - name: Deploy with rsync
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # Updates are based on file hash, not time + size
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.O2SWITCH_HOST }}
          REMOTE_USER: ${{ secrets.O2SWITCH_USER }}
          TARGET: ${{ secrets.APP_PATH }}/
          EXCLUDE: ".git*"
